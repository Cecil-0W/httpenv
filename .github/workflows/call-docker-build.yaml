---
  name: Build Docker Image

  on:
    push:
      branches:
        - main
    pull_request:

  jobs:
    build-image:
      name: Build Image
      runs-on: ubuntu-latest
  
      permissions:
        contents: read
        security-events: write
            
      steps: 

        - name: Checkout git repo
          uses: actions/checkout@v4

        - name: Set-up QEMU for multi-platform
          uses: docker/setup-qemu-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.GHA_TEST }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Docker meta
          id: docker_meta
          uses: docker/metadata-action@v5
          with:
            images: cwilliams3/httpenv
            flavor: |
              latest=false
            tags: |
              type=raw,value=04
              type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
              type=ref,event=pr
              type=ref,event=branch
              type=semver,pattern={{version}}  

        - name: Build and Push # Build to engine for scanning.
          uses: docker/build-push-action@v6
          with:
            push: false
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}
            load: true
            target: test
# 01 End
            cache-from: type=gha
            cache-to: type=gha,mode=max
# 02 End
            platforms: linux/amd64,linux/arm64,linux/arm/v7
# 03 End
        - name: CVE Scan (Unenforced)
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ${{ github.run_id }}
            exit-code: 0
            format: table

        - name: CVE Scan High/Critical (Enforced)
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: ${{ github.run_id }}
            exit-code: 1
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'HIGH,CRITICAL'
            format: 'sarif'
            output: 'trivy-results.sarif'

        - name: Find comment for image tags
          uses: peter-evans/find-comment@v3
          if: github.event_name == 'pull_request'
          id: fc
          with:
            issue-number: ${{ github.event.pull_request.number }}
            comment-author: 'github-actions[bot]'
            body-includes: Docker image tag(s) pushed
        
        - name: Create or update commment for image tags
          uses: peter-evans/create-or-update-comment@v4
          if: github.event_name == 'pull_request'
          with:
            comment-id: ${{ steps.fc.outputs.comment-id }}
            issue-number: ${{ github.event.pull_request.number }}
            body: |
              Docker image tag(s) pushed:
              ```text
              ${{ steps.docker_meta.outputs.tags }}
              ```

              Labels added to images:
              ```text
              ${{ steps.docker_meta.outputs.labels }}
              ```
            edit-mode: replace

        - name: Docker build and push to Docker Hub
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ${{ steps.docker_meta.outputs.tags }}
            labels: ${{ steps.docker_meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            platforms: linux/amd64,linux/arm64,linux/arm/v7

